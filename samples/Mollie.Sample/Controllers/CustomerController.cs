using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Mollie.Sample.Models;
using Mollie.Sample.Services.Customer;

namespace Mollie.Sample.Controllers
{
    /// <summary>
    /// Class CustomerController.
    /// Implements the <see cref="Controller" />
    /// </summary>
    /// <seealso cref="Controller" />
    /// <autogeneratedoc />
    public class CustomerController : Controller {
        /// <summary>
        /// The customer overview client
        /// </summary>
        /// <autogeneratedoc />
        private readonly ICustomerOverviewClient _customerOverviewClient;
        /// <summary>
        /// The customer storage client
        /// </summary>
        /// <autogeneratedoc />
        private readonly ICustomerStorageClient _customerStorageClient;

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerController"/> class.
        /// </summary>
        /// <param name="customerOverviewClient">The customer overview client.</param>
        /// <param name="customerStorageClient">The customer storage client.</param>
        /// <autogeneratedoc />
        public CustomerController(ICustomerOverviewClient customerOverviewClient, ICustomerStorageClient customerStorageClient) {
            _customerOverviewClient = customerOverviewClient;
            _customerStorageClient = customerStorageClient;
        }

        /// <summary>
        /// Indexes this instance.
        /// </summary>
        /// <returns>ViewResult.</returns>
        /// <autogeneratedoc />
        [HttpGet]
        public async Task<ViewResult> Index() {
            var model = await _customerOverviewClient.GetList();
            return View(model);
        }

        /// <summary>
        /// APIs the URL.
        /// </summary>
        /// <param name="url">The URL.</param>
        /// <returns>ViewResult.</returns>
        /// <autogeneratedoc />
        [HttpGet]
        public async Task<ViewResult> ApiUrl([FromQuery]string url) {
            var model = await _customerOverviewClient.GetListByUrl(url);
            return View(nameof(this.Index), model);
        }

        /// <summary>
        /// Creates this instance.
        /// </summary>
        /// <returns>ViewResult.</returns>
        /// <autogeneratedoc />
        [HttpGet]
        public ViewResult Create() {
            var model = new CreateCustomerModel();
            return View(model);
        }

        /// <summary>
        /// Creates the specified model.
        /// </summary>
        /// <param name="model">The model.</param>
        /// <returns>IActionResult.</returns>
        /// <autogeneratedoc />
        [HttpPost]
        public async Task<IActionResult> Create(CreateCustomerModel model) {
            if (!ModelState.IsValid) {
                return View();
            }

            await _customerStorageClient.Create(model);
            return RedirectToAction(nameof(this.Index));
        }
    }
}
