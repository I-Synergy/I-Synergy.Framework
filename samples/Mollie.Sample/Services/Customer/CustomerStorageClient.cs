using System.Threading.Tasks;
using AutoMapper;
using ISynergy.Framework.Payment.Mollie.Abstractions.Clients;
using ISynergy.Framework.Payment.Mollie.Models.Customer;
using Mollie.Sample.Models;

namespace Mollie.Sample.Services.Customer
{
    /// <summary>
    /// Class CustomerStorageClient.
    /// Implements the <see cref="Mollie.Sample.Services.Customer.ICustomerStorageClient" />
    /// </summary>
    /// <seealso cref="Mollie.Sample.Services.Customer.ICustomerStorageClient" />
    /// <autogeneratedoc />
    public class CustomerStorageClient : ICustomerStorageClient {
        /// <summary>
        /// The customer client
        /// </summary>
        /// <autogeneratedoc />
        private readonly ICustomerClient _customerClient;
        /// <summary>
        /// The mapper
        /// </summary>
        /// <autogeneratedoc />
        private readonly IMapper _mapper;

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerStorageClient"/> class.
        /// </summary>
        /// <param name="customerClient">The customer client.</param>
        /// <param name="mapper">The mapper.</param>
        /// <autogeneratedoc />
        public CustomerStorageClient(ICustomerClient customerClient, IMapper mapper) {
            _customerClient = customerClient;
            _mapper = mapper;
        }

        /// <summary>
        /// Creates the specified model.
        /// </summary>
        /// <param name="model">The model.</param>
        /// <autogeneratedoc />
        public async Task Create(CreateCustomerModel model) {
            var customerRequest = _mapper.Map<CustomerRequest>(model);
            await _customerClient.CreateCustomerAsync(customerRequest);
        }
    }
}
