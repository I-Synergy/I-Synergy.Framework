using System.Threading.Tasks;
using ISynergy.Framework.Payment.Mollie.Abstractions.Clients;
using ISynergy.Framework.Payment.Mollie.Models;
using ISynergy.Framework.Payment.Mollie.Models.Payment.Response;
using ISynergy.Framework.Payment.Mollie.Models.Refund;

namespace Mollie.Sample.Services.Payment.Refund
{
    /// <summary>
    /// Interface IRefundPaymentClient
    /// </summary>
    /// <autogeneratedoc />
    public interface IRefundPaymentClient {
        /// <summary>
        /// Refunds the specified payment identifier.
        /// </summary>
        /// <param name="paymentId">The payment identifier.</param>
        /// <returns>Task.</returns>
        /// <autogeneratedoc />
        Task Refund(string paymentId);
    }

    /// <summary>
    /// Class RefundPaymentClient.
    /// Implements the <see cref="Mollie.Sample.Services.Payment.Refund.IRefundPaymentClient" />
    /// </summary>
    /// <seealso cref="Mollie.Sample.Services.Payment.Refund.IRefundPaymentClient" />
    /// <autogeneratedoc />
    public class RefundPaymentClient : IRefundPaymentClient {
        /// <summary>
        /// The refund client
        /// </summary>
        /// <autogeneratedoc />
        private readonly IRefundClient _refundClient;
        /// <summary>
        /// The payment client
        /// </summary>
        /// <autogeneratedoc />
        private readonly IPaymentClient _paymentClient;

        /// <summary>
        /// Initializes a new instance of the <see cref="RefundPaymentClient"/> class.
        /// </summary>
        /// <param name="refundClient">The refund client.</param>
        /// <param name="paymentClient">The payment client.</param>
        /// <autogeneratedoc />
        public RefundPaymentClient(IRefundClient refundClient, IPaymentClient paymentClient) {
            _refundClient = refundClient;
            _paymentClient = paymentClient;
        }

        /// <summary>
        /// Refunds the specified payment identifier.
        /// </summary>
        /// <param name="paymentId">The payment identifier.</param>
        /// <autogeneratedoc />
        public async Task Refund(string paymentId) {
            var paymentToRefund = await GetPaymentDetails(paymentId);
            var refundRequest = new RefundRequest() {
                Amount = new Amount(paymentToRefund.Amount.Currency, paymentToRefund.Amount.Value)
            };

            await _refundClient.CreateRefundAsync(paymentId, refundRequest);
        }

        /// <summary>
        /// Gets the payment details.
        /// </summary>
        /// <param name="paymentId">The payment identifier.</param>
        /// <returns>PaymentResponse.</returns>
        /// <autogeneratedoc />
        private async Task<PaymentResponse> GetPaymentDetails(string paymentId) {
            return await _paymentClient.GetPaymentAsync(paymentId);
        }
    }
}
