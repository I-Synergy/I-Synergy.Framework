using System.Threading.Tasks;
using ISynergy.Framework.Payment.Mollie.Abstractions.Clients;
using ISynergy.Framework.Payment.Mollie.Enumerations;
using ISynergy.Framework.Payment.Mollie.Models.Mandate;

namespace Mollie.Sample.Services.Mandate
{
    /// <summary>
    /// Interface IMandateStorageClient
    /// </summary>
    /// <autogeneratedoc />
    public interface IMandateStorageClient {
        /// <summary>
        /// Creates the specified customer identifier.
        /// </summary>
        /// <param name="customerId">The customer identifier.</param>
        /// <returns>Task&lt;MandateResponse&gt;.</returns>
        /// <autogeneratedoc />
        Task<MandateResponse> Create(string customerId);
    }

    /// <summary>
    /// Class MandateStorageClient.
    /// Implements the <see cref="Mollie.Sample.Services.Mandate.IMandateStorageClient" />
    /// </summary>
    /// <seealso cref="Mollie.Sample.Services.Mandate.IMandateStorageClient" />
    /// <autogeneratedoc />
    public class MandateStorageClient : IMandateStorageClient {
        /// <summary>
        /// The mandate client
        /// </summary>
        /// <autogeneratedoc />
        private readonly IMandateClient _mandateClient;
        /// <summary>
        /// Initializes a new instance of the <see cref="MandateStorageClient"/> class.
        /// </summary>
        /// <param name="mandateClient">The mandate client.</param>
        /// <autogeneratedoc />
        public MandateStorageClient(IMandateClient mandateClient) {
            _mandateClient = mandateClient;
        }

        /// <summary>
        /// Creates the specified customer identifier.
        /// </summary>
        /// <param name="customerId">The customer identifier.</param>
        /// <returns>MandateResponse.</returns>
        /// <autogeneratedoc />
        public async Task<MandateResponse> Create(string customerId) {
            var mandateRequest = CreateDefaultMandateRequest();
            return await _mandateClient.CreateMandateAsync(customerId, mandateRequest);
        }

        /// <summary>
        /// Creates the default mandate request.
        /// </summary>
        /// <returns>MandateRequest.</returns>
        /// <autogeneratedoc />
        private MandateRequest CreateDefaultMandateRequest() {
            return new MandateRequest() {
                Method = PaymentMethods.DirectDebit,
                ConsumerName = "John Smit",
                ConsumerAccount = "NL86INGB0002445588", // IBAN van de belastingdienst ;D
            };
        }
    }
}
