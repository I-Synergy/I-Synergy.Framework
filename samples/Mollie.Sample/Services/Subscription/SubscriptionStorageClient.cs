using System.Threading.Tasks;
using AutoMapper;
using ISynergy.Framework.Payment.Mollie.Abstractions.Clients;
using ISynergy.Framework.Payment.Mollie.Models.Subscription;
using Mollie.Sample.Models;

namespace Mollie.Sample.Services.Subscription
{
    /// <summary>
    /// Class SubscriptionStorageClient.
    /// Implements the <see cref="ISubscriptionStorageClient" />
    /// </summary>
    /// <seealso cref="ISubscriptionStorageClient" />
    /// <autogeneratedoc />
    public class SubscriptionStorageClient : ISubscriptionStorageClient {
        /// <summary>
        /// The subscription client
        /// </summary>
        /// <autogeneratedoc />
        private readonly ISubscriptionClient _subscriptionClient;
        /// <summary>
        /// The mapper
        /// </summary>
        /// <autogeneratedoc />
        private readonly IMapper _mapper;

        /// <summary>
        /// Initializes a new instance of the <see cref="SubscriptionStorageClient"/> class.
        /// </summary>
        /// <param name="subscriptionClient">The subscription client.</param>
        /// <param name="mapper">The mapper.</param>
        /// <autogeneratedoc />
        public SubscriptionStorageClient(ISubscriptionClient subscriptionClient, IMapper mapper) {
            _subscriptionClient = subscriptionClient;
            _mapper = mapper;
        }

        /// <summary>
        /// Creates the specified model.
        /// </summary>
        /// <param name="model">The model.</param>
        /// <autogeneratedoc />
        public async Task Create(CreateSubscriptionModel model) {
            var subscriptionRequest = _mapper.Map<SubscriptionRequest>(model);
            await _subscriptionClient.CreateSubscriptionAsync(model.CustomerId, subscriptionRequest);
        }
    }
}
