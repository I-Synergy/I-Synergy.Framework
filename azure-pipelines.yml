name: $(Date:yyyy).1$(DayOfYear)$(Rev:.r)

trigger:
- master

variables:
  - name: VersionMajor
    value: ''
  - name: VersionMinor
    value: ''
  - name: VersionRevision
    value: ''

  - ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    - group: ACC
 
  - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    - group: PROD

pool:
  vmImage: 'windows-2022'

stages:
  - stage: BuildStage
    displayName: 'Build'
    jobs:
    - job: BuildJob
      displayName: 'Build, pack and test assemblies'
      steps:
        - task: PowerShell@2
          displayName: Set the Major Version variable value
          inputs:
            targetType: 'inline'
            script: |
              [string] $buildNumber = $Env:BUILD_BUILDNUMBER
              [string] $version = $buildNumber.Substring(0,4)
              Write-Host "Setting the major version number variable to '$version'."
              Write-Host "##vso[task.setvariable variable=VersionMajor]$version"
        
        - task: PowerShell@2
          displayName: Set the Minor Version variable value
          inputs:
            targetType: 'inline'
            script: |
              [string] $buildNumber = $Env:BUILD_BUILDNUMBER
              [string] $version = $buildNumber.Substring(5,4)
              Write-Host "Setting the minor version number variable to '$version'."
              Write-Host "##vso[task.setvariable variable=VersionMinor]$version"

        - task: PowerShell@2
          displayName: Set the Revision Version variable value
          inputs:
            targetType: 'inline'
            script: |
              [string] $buildNumber = $Env:BUILD_BUILDNUMBER
              [string] $revision = $buildNumber.Substring($buildNumber.LastIndexOf('.') + 1)
              Write-Host "Setting the revision number variable to '$revision'."
              Write-Host "##vso[task.setvariable variable=VersionRevision]$revision"

        - task: NuGetToolInstaller@1
          displayName: 'Install NuGet 6.0.0'
          inputs:
            versionSpec: 6.0.0

        - task: UseDotNet@2
          displayName: 'Install .Net SDK 6.0.100'
          inputs:
            packageType: 'sdk'
            useGlobalJson: true

        - task: PowerShell@2
          displayName: 'Install Windows 10.0.18362 SDK'
          inputs:
            targetType: 'inline'
            script: |
              $sdkUrl = "https://isynergy.blob.core.windows.net/sdk/windows_sdk_10.0.18362.exe"
              $sdkPath = Join-Path $env:TEMP "windows_sdk_10.0.18362.exe"
                             
              # Download the files to local temp folder
              Write-Output "downloading $sdkUrl…"
              Invoke-WebRequest -Uri $sdkUrl -OutFile $sdkPath
                             
              # Install the SDKs (use the "qn" flag to install silently)
              Write-Output "installing $sdkPath…"
              Start-Process $sdkPath -ArgumentList "/q" -Wait

        - task: DownloadSecureFile@1
          displayName: 'Download secure file'
          inputs:
            secureFile: 'i-synergy.pfx'

        - task: SonarCloudPrepare@1
          inputs:
            SonarCloud: 'SonarCloud'
            organization: 'i-synergy'
            scannerMode: 'MSBuild'
            projectKey: 'I-Synergy.Framework'
            projectName: 'I-Synergy.Framework'
            projectVersion: '$(VersionPackage)'
      
        - task: Assembly-Info-NetCore@2
          displayName: 'Set Assembly Manifest Data v2'
          inputs:
            FileNames: |
             src\ISynergy.Framework.Core\ISynergy.Framework.Core.csproj
             src\ISynergy.Framework.IO\ISynergy.Framework.IO.csproj
             src\ISynergy.Framework.Automations\ISynergy.Framework.Automations.csproj
             src\ISynergy.Framework.AspNetCore\ISynergy.Framework.AspNetCore.csproj
             src\ISynergy.Framework.AspNetCore.Authentication\ISynergy.Framework.AspNetCore.Authentication.csproj
             src\ISynergy.Framework.AspNetCore.Globalization\ISynergy.Framework.AspNetCore.Globalization.csproj
             src\ISynergy.Framework.AspNetCore.MultiTenancy\ISynergy.Framework.AspNetCore.MultiTenancy.csproj
             src\ISynergy.Framework.EntityFramework\ISynergy.Framework.EntityFramework.csproj
             src\ISynergy.Framework.Financial\ISynergy.Framework.Financial.csproj
             src\ISynergy.Framework.Geography\ISynergy.Framework.Geography.csproj
             src\ISynergy.Framework.Physics\ISynergy.Framework.Physics.csproj
             src\ISynergy.Framework.Mathematics\ISynergy.Framework.Mathematics.csproj
             src\ISynergy.Framework.MessageBus\ISynergy.Framework.MessageBus.csproj
             src\ISynergy.Framework.MessageBus.Azure\ISynergy.Framework.MessageBus.Azure.csproj
             src\ISynergy.Framework.Mvvm\ISynergy.Framework.Mvvm.csproj
             src\ISynergy.Framework.Storage\ISynergy.Framework.Storage.csproj
             src\ISynergy.Framework.Storage.Azure\ISynergy.Framework.Storage.Azure.csproj
             src\ISynergy.Framework.Payment\ISynergy.Framework.Payment.csproj
             src\ISynergy.Framework.Payment.Mollie\ISynergy.Framework.Payment.Mollie.csproj
             src\ISynergy.Framework.UI\ISynergy.Framework.UI.csproj
             src\ISynergy.Framework.Update\ISynergy.Framework.Update.csproj
             src\ISynergy.Framework.Documents\ISynergy.Framework.Documents.csproj
             src\ISynergy.Framework.Documents.Syncfusion\ISynergy.Framework.Documents.Syncfusion.csproj
             src\ISynergy.Framework.Mail\ISynergy.Framework.Mail.csproj
             src\ISynergy.Framework.Mail.SendGrid\ISynergy.Framework.Mail.SendGrid.csproj
             src\ISynergy.Framework.Monitoring\ISynergy.Framework.Monitoring.csproj
             src\ISynergy.Framework.Monitoring.Client\ISynergy.Framework.Monitoring.Client.csproj
             src\ISynergy.Framework.Monitoring.Client.SignalR\ISynergy.Framework.Monitoring.Client.SignalR.csproj
             src\ISynergy.Framework.Monitoring.Common\ISynergy.Framework.Monitoring.Common.csproj
             src\ISynergy.Framework.Monitoring.SignalR\ISynergy.Framework.Monitoring.SignalR.csproj
             src\ISynergy.Framework.Printer.Label\ISynergy.Framework.Printer.Label.csproj
             src\ISynergy.Framework.Printer.Label.Dymo\ISynergy.Framework.Printer.Label.Dymo.csproj
             src\ISynergy.Framework.Telemetry\ISynergy.Framework.Telemetry.csproj
             src\ISynergy.Framework.Telemetry.AppCenter\ISynergy.Framework.Telemetry.AppCenter.csproj
             src\ISynergy.Framework.Telemetry.ApplicationInsights\ISynergy.Framework.Telemetry.ApplicationInsights.csproj
             src\ISynergy.Framework.Clipboard\ISynergy.Framework.Clipboard.csproj
            InsertAttributes: true
            WriteBOM: true
            GeneratePackageOnBuild: true
            VersionNumber: '$(VersionNumber)'
            FileVersionNumber: '$(VersionFile)'
            InformationalVersion: '$(VersionInformational)'
            PackageVersion: '$(VersionPackage)'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Core'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Core\ISynergy.Framework.Core.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Core'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Core\ISynergy.Framework.Core.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.IO'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.IO\ISynergy.Framework.IO.csproj'
            arguments: '-c $(BuildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.IO'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.IO\ISynergy.Framework.IO.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Automations'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Automations\ISynergy.Framework.Automations.csproj'
            arguments: '-c $(BuildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Automations'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Automations\ISynergy.Framework.Automations.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.AspNetCore'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.AspNetCore\ISynergy.Framework.AspNetCore.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.AspNetCore'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.AspNetCore\ISynergy.Framework.AspNetCore.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.AspNetCore.Authentication'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.AspNetCore.Authentication\ISynergy.Framework.AspNetCore.Authentication.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.AspNetCore.Authentication'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.AspNetCore.Authentication\ISynergy.Framework.AspNetCore.Authentication.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.AspNetCore.Globalization'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.AspNetCore.Globalization\ISynergy.Framework.AspNetCore.Globalization.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.AspNetCore.Globalization'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.AspNetCore.Globalization\ISynergy.Framework.AspNetCore.Globalization.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.AspNetCore.MultiTenancy'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.AspNetCore.MultiTenancy\ISynergy.Framework.AspNetCore.MultiTenancy.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.AspNetCore.MultiTenancy'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.AspNetCore.MultiTenancy\ISynergy.Framework.AspNetCore.MultiTenancy.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Documents'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Documents\ISynergy.Framework.Documents.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Documents'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Documents\ISynergy.Framework.Documents.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Documents.Syncfusion'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Documents.Syncfusion\ISynergy.Framework.Documents.Syncfusion.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Documents.Syncfusion'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Documents.Syncfusion\ISynergy.Framework.Documents.Syncfusion.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.EntityFramework'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.EntityFramework\ISynergy.Framework.EntityFramework.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.EntityFramework'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.EntityFramework\ISynergy.Framework.EntityFramework.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Financial'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Financial\ISynergy.Framework.Financial.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Financial'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Financial\ISynergy.Framework.Financial.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Geography'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Geography\ISynergy.Framework.Geography.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Geography'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Geography\ISynergy.Framework.Geography.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Mail'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Mail\ISynergy.Framework.Mail.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Mail'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Mail\ISynergy.Framework.Mail.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Mail.SendGrid'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Mail.SendGrid\ISynergy.Framework.Mail.SendGrid.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Mail.SendGrid'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Mail.SendGrid\ISynergy.Framework.Mail.SendGrid.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Physics'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Physics\ISynergy.Framework.Physics.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Physics'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Physics\ISynergy.Framework.Physics.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Mathematics'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Mathematics\ISynergy.Framework.Mathematics.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Mathematics'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Mathematics\ISynergy.Framework.Mathematics.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.MessageBus'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.MessageBus\ISynergy.Framework.MessageBus.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.MessageBus'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.MessageBus\ISynergy.Framework.MessageBus.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.MessageBus.Azure'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.MessageBus.Azure\ISynergy.Framework.MessageBus.Azure.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.MessageBus.Azure'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.MessageBus.Azure\ISynergy.Framework.MessageBus.Azure.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Monitoring'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Monitoring\ISynergy.Framework.Monitoring.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Monitoring'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Monitoring\ISynergy.Framework.Monitoring.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Monitoring.Client'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Monitoring.Client\ISynergy.Framework.Monitoring.Client.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Monitoring.Client'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Monitoring.Client\ISynergy.Framework.Monitoring.Client.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Monitoring.Client.SignalR'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Monitoring.Client.SignalR\ISynergy.Framework.Monitoring.Client.SignalR.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Monitoring.Client.SignalR'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Monitoring.Client.SignalR\ISynergy.Framework.Monitoring.Client.SignalR.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Monitoring.Common'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Monitoring.Common\ISynergy.Framework.Monitoring.Common.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Monitoring.Common'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Monitoring.Common\ISynergy.Framework.Monitoring.Common.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Monitoring.SignalR'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Monitoring.SignalR\ISynergy.Framework.Monitoring.SignalR.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Monitoring.SignalR'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Monitoring.SignalR\ISynergy.Framework.Monitoring.SignalR.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Mvvm'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Mvvm\ISynergy.Framework.Mvvm.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Mvvm'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Mvvm\ISynergy.Framework.Mvvm.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Printer.Label'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Printer.Label\ISynergy.Framework.Printer.Label.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Printer.Label'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Printer.Label\ISynergy.Framework.Printer.Label.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Printer.Label.Dymo'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Printer.Label.Dymo\ISynergy.Framework.Printer.Label.Dymo.csproj'
            arguments: '-c $(BuildConfiguration)'
      
        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Printer.Label.Dymo'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Printer.Label.Dymo\ISynergy.Framework.Printer.Label.Dymo.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Storage'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Storage\ISynergy.Framework.Storage.csproj'
            arguments: '-c $(BuildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Storage'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Storage\ISynergy.Framework.Storage.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Storage.Azure'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Storage.Azure\ISynergy.Framework.Storage.Azure.csproj'
            arguments: '-c $(BuildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Storage.Azure'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Storage.Azure\ISynergy.Framework.Storage.Azure.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Payment'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Payment\ISynergy.Framework.Payment.csproj'
            arguments: '-c $(BuildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Payment'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Payment\ISynergy.Framework.Payment.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Payment.Mollie'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Payment.Mollie\ISynergy.Framework.Payment.Mollie.csproj'
            arguments: '-c $(BuildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Payment.Mollie'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Payment.Mollie\ISynergy.Framework.Payment.Mollie.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy.Framework.Telemetry'
          inputs:
            command: build
            projects: 'src\ISynergy.Framework.Telemetry\ISynergy.Framework.Telemetry.csproj'
            arguments: '-c $(BuildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet pack: I-Synergy.Framework.Telemetry'
          inputs:
            command: 'pack'
            packagesToPack: 'src\ISynergy.Framework.Telemetry\ISynergy.Framework.Telemetry.csproj'
            nobuild: true
            includesymbols: true
            versioningScheme: 'byEnvVar'
            versionEnvVar: 'VersionPackage'

        - task: MSBuild@1
          displayName: 'I-Synergy.Framework.Telemetry.AppCenter - Nuget Restore'
          inputs:
            solution: 'src\ISynergy.Framework.Telemetry.AppCenter\ISynergy.Framework.Telemetry.AppCenter.csproj'
            platform: AnyCpu
            configuration: '$(BuildConfiguration)'
            msbuildArguments: '/t:restore'

        - task: MSBuild@1
          displayName: 'I-Synergy.Framework.Telemetry.AppCenter - Build and Pack'
          inputs:
            solution: 'src\ISynergy.Framework.Telemetry.AppCenter\ISynergy.Framework.Telemetry.AppCenter.csproj'
            platform: AnyCpu
            configuration: '$(BuildConfiguration)'
            msbuildArguments: '/p:PackageOutputPath=$(Build.ArtifactStagingDirectory)'

        - task: MSBuild@1
          displayName: 'I-Synergy.Framework.Telemetry.ApplicationInsights - Nuget Restore'
          inputs:
            solution: 'src\ISynergy.Framework.Telemetry.ApplicationInsights\ISynergy.Framework.Telemetry.ApplicationInsights.csproj'
            platform: AnyCpu
            configuration: '$(BuildConfiguration)'
            msbuildArguments: '/t:restore'

        - task: MSBuild@1
          displayName: 'I-Synergy.Framework.Telemetry.ApplicationInsights - Build and Pack'
          inputs:
            solution: 'src\ISynergy.Framework.Telemetry.ApplicationInsights\ISynergy.Framework.Telemetry.ApplicationInsights.csproj'
            platform: AnyCpu
            configuration: '$(BuildConfiguration)'
            msbuildArguments: '/p:PackageOutputPath=$(Build.ArtifactStagingDirectory)'

        - task: MSBuild@1
          displayName: 'I-Synergy.Framework.Clipboard - Nuget Restore'
          inputs:
            solution: 'src\ISynergy.Framework.Clipboard\ISynergy.Framework.Clipboard.csproj'
            platform: AnyCpu
            configuration: '$(BuildConfiguration)'
            msbuildArguments: '/t:restore'

        - task: MSBuild@1
          displayName: 'I-Synergy.Framework.Clipboard - Build and Pack'
          inputs:
            solution: 'src\ISynergy.Framework.Clipboard\ISynergy.Framework.Clipboard.csproj'
            platform: AnyCpu
            configuration: '$(BuildConfiguration)'
            msbuildArguments: '/p:PackageOutputPath=$(Build.ArtifactStagingDirectory)'

        - task: MSBuild@1
          displayName: 'Framework Update - Nuget Restore'
          inputs:
            solution: 'src\ISynergy.Framework.Update\ISynergy.Framework.Update.csproj'
            platform: AnyCpu
            configuration: '$(BuildConfiguration)'
            msbuildArguments: '/t:restore'

        - task: MSBuild@1
          displayName: 'Framework Update - Build and Pack'
          inputs:
            solution: 'src\ISynergy.Framework.Update\ISynergy.Framework.Update.csproj'
            platform: AnyCpu
            configuration: '$(BuildConfiguration)'
            msbuildArguments: '/p:PackageOutputPath=$(Build.ArtifactStagingDirectory)'

        - task: MSBuild@1
          displayName: 'Framework UI - Nuget Restore'
          inputs:
            solution: 'src\ISynergy.Framework.UI\ISynergy.Framework.UI.csproj'
            platform: AnyCpu
            configuration: '$(BuildConfiguration)'
            msbuildArguments: '/t:restore'

        - task: MSBuild@1
          displayName: 'Framework UI - Build and Pack'
          inputs:
            solution: 'src\ISynergy.Framework.UI\ISynergy.Framework.UI.csproj'
            platform: AnyCpu
            configuration: '$(BuildConfiguration)'
            msbuildArguments: '/p:PackageOutputPath=$(Build.ArtifactStagingDirectory)'
        
        - task: NuGetCommand@2
          displayName: 'Sign Nuget packages'
          inputs:
            command: 'custom'
            arguments: 'sign $(Build.ArtifactStagingDirectory)\*.nupkg -CertificatePath "$(Agent.WorkFolder)\_temp\i-synergy.pfx" -CertificatePassword "$(CertPassword)" -Timestamper "$(TimestampUrl)"'

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifacts'
          inputs:
            pathtoPublish: '$(Build.ArtifactStagingDirectory)'
            artifactName: Output
            publishLocation: 'Container'

        - task: DotNetCoreCLI@2
          displayName: 'Run Test: I-Synergy.Framework.Core'
          inputs:
            command: test
            projects: 'tests\ISynergy.Framework.Core.Tests\ISynergy.Framework.Core.Tests.csproj'
            arguments: '--configuration $(BuildConfiguration) --test-adapter-path:. --collect:"Code Coverage" --settings:codecoverage.runsettings'
      
        - task: DotNetCoreCLI@2
          displayName: 'Run Test: I-Synergy.Framework.IO'
          inputs:
            command: test
            projects: 'tests\ISynergy.Framework.IO.Tests\ISynergy.Framework.IO.Tests.csproj'
            arguments: '--configuration $(BuildConfiguration) --test-adapter-path:. --collect:"Code Coverage" --settings:codecoverage.runsettings'

        - task: DotNetCoreCLI@2
          displayName: 'Run Test: I-Synergy.Framework.Automations'
          inputs:
            command: test
            projects: 'tests\ISynergy.Framework.Automations.Tests\ISynergy.Framework.Automations.Tests.csproj'
            arguments: '--configuration $(BuildConfiguration) --test-adapter-path:. --collect:"Code Coverage" --settings:codecoverage.runsettings'

        - task: DotNetCoreCLI@2
          displayName: 'Run Test: I-Synergy.Framework.AspNetCore'
          inputs:
            command: test
            projects: 'tests\ISynergy.Framework.AspNetCore.Tests\ISynergy.Framework.AspNetCore.Tests.csproj'
            arguments: '--configuration $(BuildConfiguration) --test-adapter-path:. --collect:"Code Coverage" --settings:codecoverage.runsettings'
      
        - task: DotNetCoreCLI@2
          displayName: 'Run Test: I-Synergy.Framework.Financial'
          inputs:
            command: test
            projects: 'tests\ISynergy.Framework.Financial.Tests\ISynergy.Framework.Financial.Tests.csproj'
            arguments: '--configuration $(BuildConfiguration) --test-adapter-path:. --collect:"Code Coverage" --settings:codecoverage.runsettings'
      
        - task: DotNetCoreCLI@2
          displayName: 'Run Test: I-Synergy.Framework.Geography'
          inputs:
            command: test
            projects: 'tests\ISynergy.Framework.Geography.Tests\ISynergy.Framework.Geography.Tests.csproj'
            arguments: '--configuration $(BuildConfiguration) --test-adapter-path:. --collect:"Code Coverage" --settings:codecoverage.runsettings'
      
        - task: DotNetCoreCLI@2
          displayName: 'Run Test: I-Synergy.Framework.Physics'
          inputs:
            command: test
            projects: 'tests\ISynergy.Framework.Physics.Tests\ISynergy.Framework.Physics.Tests.csproj'
            arguments: '--configuration $(BuildConfiguration) --test-adapter-path:. --collect:"Code Coverage" --settings:codecoverage.runsettings'

        - task: DotNetCoreCLI@2
          displayName: 'Run Test: I-Synergy.Framework.Mathematics'
          inputs:
            command: test
            projects: 'tests\ISynergy.Framework.Mathematics.Tests\ISynergy.Framework.Mathematics.Tests.csproj'
            arguments: '--configuration $(BuildConfiguration) --test-adapter-path:. --collect:"Code Coverage" --settings:codecoverage.runsettings'

        - task: DotNetCoreCLI@2
          displayName: 'Run Test: I-Synergy.Framework.Payment'
          inputs:
            command: test
            projects: 'tests\ISynergy.Framework.Payment.Tests\ISynergy.Framework.Payment.Tests.csproj'
            arguments: '--configuration $(BuildConfiguration) --test-adapter-path:. --collect:"Code Coverage" --settings:codecoverage.runsettings'

        - task: SonarCloudAnalyze@1

  - stage: DocStage
    displayName: 'Documentation'
    dependsOn: BuildStage
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
    - job: DocJob
      displayName: 'Create API Documentation'
      steps:
        - task: NuGetToolInstaller@1
          displayName: 'Use NuGet 5.8.1'
          inputs:
            versionSpec: 5.8.1

        - task: ChocolateyToolInstaller@0
          inputs:
            force: true

        - task: ChocolateyCommand@0
          inputs:
            command: 'install'
            installPackageId: 'wkhtmltopdf'

        - task: DotNetCoreCLI@2
          displayName: 'Dotnet build: I-Synergy Framework Documentation'
          inputs:
            command: build
            projects: 'docs\ISynergy.Framework\ISynergy.Framework.csproj'
            arguments: '-c $(BuildConfiguration)'

        - task: AzureCLI@2
          displayName: 'Delete Existing Files'
          inputs:
            azureSubscription: 'Azure'
            scriptType: 'pscore'
            scriptLocation: 'inlineScript'
            inlineScript: az storage blob delete-batch --source '$web' --account-name '$(AzureStorageAccountName)' --account-key '$(AzureStorageAccountKey)'
            
        - task: AzureCLI@2
          displayName: 'Upload new files'
          inputs:
            azureSubscription: 'Azure'
            scriptType: 'ps'
            scriptLocation: 'inlineScript'
            inlineScript: |
              $sourcePath = "docs\ISynergy.Framework\_site"
              az storage blob upload-batch --destination '$web' --source $sourcePath --account-name '$(AzureStorageAccountName)' --account-key '$(AzureStorageAccountKey)'

        - task: AzureCLI@2
          displayName: 'Purge CDN'
          inputs:
            azureSubscription: 'Azure'
            scriptType: 'ps'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az cdn endpoint purge --resource-group 'I-Synergy' --name framework --profile-name Framework --content-paths '/*'
          continueOnError: true

  - stage: Release
    displayName: 'Release'
    dependsOn: BuildStage
    condition: succeeded()
    jobs:
    - job: ArtifactsJob
      displayName: 'Get Nuget artifacts'
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: 'Output'

    - deployment: DeployNuget
      displayName: 'Deploy to Artifacts'
      environment: $(Environment)
      strategy:
        runOnce:
          deploy:
            steps:
              - task: NuGetCommand@2
                displayName: 'NuGet push - ISynergy Framework'
                inputs:
                  command: 'push'
                  packagesToPush: '$(Pipeline.Workspace)/Output/*.nupkg'
                  nuGetFeedType: 'external'
                  publishFeedCredentials: 'Nuget.org'